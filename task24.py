pam = """
2 -2  0  0 -3  1 -1 -1 -1 -2 -1  0  1  0 -2  1  1  0 -6 -3
-2 12 -5 -5 -4 -3 -3 -2 -5 -6 -5 -4 -3 -5 -4  0 -2 -2 -8  0
 0 -5  4  3 -6  1  1 -2  0 -4 -3  2 -1  2 -1  0  0 -2 -7 -4
 0 -5  3  4 -5  0  1 -2  0 -3 -2  1 -1  2 -1  0  0 -2 -7 -4
-3 -4 -6 -5  9 -5 -2  1 -5  2  0 -3 -5 -5 -4 -3 -3 -1  0  7
 1 -3  1  0 -5  5 -2 -3 -2 -4 -3  0  0 -1 -3  1  0 -1 -7 -5
-1 -3  1  1 -2 -2  6 -2  0 -2 -2  2  0  3  2 -1 -1 -2 -3  0
-1 -2 -2 -2  1 -3 -2  5 -2  2  2 -2 -2 -2 -2 -1  0  4 -5 -1
-1 -5  0  0 -5 -2  0 -2  5 -3  0  1 -1  1  3  0  0 -2 -3 -4
-2 -6 -4 -3  2 -4 -2  2 -3  6  4 -3 -3 -2 -3 -3 -2  2 -2 -1
-1 -5 -3 -2  0 -3 -2  2  0  4  6 -2 -2 -1  0 -2 -1  2 -4 -2
 0 -4  2  1 -3  0  2 -2  1 -3 -2  2  0  1  0  1  0 -2 -4 -2
 1 -3 -1 -1 -5  0  0 -2 -1 -3 -2  0  6  0  0  1  0 -1 -6 -5
 0 -5  2  2 -5 -1  3 -2  1 -2 -1  1  0  4  1 -1 -1 -2 -5 -4
-2 -4 -1 -1 -4 -3  2 -2  3 -3  0  0  0  1  6  0 -1 -2  2 -4
 1  0  0  0 -3  1 -1 -1  0 -3 -2  1  1 -1  0  2  1 -1 -2 -3
 1 -2  0  0 -3  0 -1  0  0 -2 -1  0  0 -1 -1  1  3  0 -5 -3
 0 -2 -2 -2 -1 -1 -2  4 -2  2  2 -2 -1 -2 -2 -1  0  4 -6 -2
-6 -8 -7 -7  0 -7 -3 -5 -3 -2 -4 -4 -6 -5  2 -2 -5 -6 17  0
-3  0 -4 -4  7 -5  0 -1 -4 -1 -2 -2 -5 -4 -4 -3 -3 -2  0 10
"""

alphabet = "A  C  D  E  F  G  H  I  K  L  M  N  P  Q  R  S  T  V  W  Y".split("  ")
pam = [[int(item) for item in line.split()] for line in pam.strip().split("\n")]
tmp = {item: {} for item in alphabet}
for i, line in enumerate(pam):
    key1 = alphabet[i]
    for j, value in enumerate(line):
        key2 = alphabet[j]
        tmp[key1][key2] = value
pam = tmp
penalty = -5

def alignment(a, b):
    n, m = len(a), len(b)
    result = [[0 for j in range(n+1)] for i in range(m+1)]
    # for i in range(0, m+1):
    #     result[i][0] = penalty * i
    # for j in range(0, n+1):
    #     result[0][j] = penalty * j
    # for item in result:
    #     print(item)
    best = 0
    optloc = (0,0)

    for i in range(1, m+1):
        for j in range(1, n+1):
            match = result[i-1][j-1] + pam[b[i-1]][a[j-1]]
            tmp1 = result[i][j-1] + penalty
            tmp2 = result[i-1][j] + penalty
            result[i][j] = max(match, tmp1, tmp2, 0)
            if result[i][j] >= best:
                best = result[i][j]
                optloc = (i,j)
    # for item in result:
    #     print(item)

    i, j = optloc
    b_res, a_res = "", ""
    while i > 0 and j > 0 and result[i][j] != 0:
        if result[i][j] - pam[b[i-1]][a[j-1]] == result[i-1][j-1]:
            b_res += b[i-1]
            a_res += a[j-1]
            i, j = i-1, j-1
        elif result[i][j] - penalty == result[i][j-1]:
            b_res += "-"
            a_res += a[j-1]
            j -= 1
        else:
            b_res += b[i-1]
            a_res += "-"
            i -= 1
    # if i > 0:
    #     while i > 0:
    #         a_res += "-"
    #         b_res += b[i-1]
    #         i -= 1
    # elif j > 0:
    #     while j > 0:
    #         a_res += a[j-1]
    #         b_res += "-"
    #         j -= 1
    return best, a_res[::-1], b_res[::-1]

a, b = """
VHQFGRDNHRMVTNEGIPVLNRWVFHSWVQPSNYSNMRPSAWHCLCVSAMHDKNESPGEEDLMINMYQPVGIRHLDPMYFAYSHETQHVPNRTWKTSYGVADIARADKTYTAGETRCLWHNMSVWPAVTFLIRKDVCHQQKIMQMIMLFQASCNIMVCDNGVTVAISVSTGEKAQSEHIAYSGVNQPPFMKIPVIYCTTCMMMQFYNDGANHIRVLGTAHYEIFCIKIEKFAPGYQIKLYQVQGVPTPYDMTLTIGGWNDLTPWFVGGLWRDVNCHKADGWLYNNRKDPTPMHIMVKLMKIDDRMQQQKITLLKFTKQVHPGYLRGEWYCSHPKQCVMKYRFKFWDHHSDSDSTEYNTFHRHKNYVHYDVHDAFCAQEAINWWADAGLFIGLIKWTVDPHKMHSFEFNGHMYWDAGHLVGFVLAAQQEAQYGSFGDSTDWMHQCPPCATWAHCMKPPVLQMAIYAWAGASVWRKSIHEPHTFIASGWDWDHVVLPFVWHGQMVTQTCILDTKERSKGDDCDEPYFTATRLHANCVLVCNYEGEDDILFYKQTRDIEFCERAHGTYPEDSRCLFRFKLNEADKYPRGGKWEHSPQFYIRPNSHLNRFCVVIPCNELRRPWSSCHLCLPSQKKTNGLKCTPIFPIWEQWPYSSWGQDHVEKPKIVLMGMGQLVWYNKWPCKCRNHKIPQELPEIWHNEVKNNCQSVYMLEKENAHRLRDTLIGQDWKIISATIFDMALGEHMGCFWCGDAIQARFLATTRWFRRHENVDPTTYMVVQSPKYQRYFTHFQWLRVRDEDCEPGECISEIFFRAHWRCIIQRAGNHCFEKMTTECKMYIEDADTWHTWPQFQCHSDMTFKGKRCTKKHTWRLFQQMAGCCPPEYLVTWIFADICQEFNPTDAKDAQAINMNGFGDCQIQCEVANDFLCWQFGWQVPPMEKDRFFHPVFMRLISQACVTLMAPININEDKDKRRCARWPNCMEVTKDLMMCIFCTEQNSQEGAWRKWNKTCVRVTSTGVLGCIETICHPFQWSLVGQYQMQFEIKGFLEVNRIPYNQCMNPWILYSYRFKNVLGICHPWFEDDATYNVVDNYMQLNKYICTWSQPKKWSGYGLGCPTSLTASFSLDGFMESYFLNICMFNTPQEVNLPGIYIDLPYFFEGRFGLWFYSTRQQYSETWSVWFGAISVGWIYTMTACGAQICETDIEIQLGLDKWVDKLQQAIIDNSCVCVGLSMPGHQGYSIPEPFGNHRIHQFNTKTFQPQCINGIKMLCRARPVRYADWFEAFSNHMIFKLAAFKAMVILVRTGTEASVHFKRTEAAHCDYFASPYISWKPIFQACKHSPWHNLFDGPYLTDSIKLTADYGKFAPYIISKLWFAIWFCTWKCNSGWPWWYIEEQWWDLHIFCNVRHAHRGSHHQHKFRLIHLDPSPYRTFKICQWLGLTFVTTMRNKYFTSNPMTPLPLAQYQTVFYACCCMYVQVFVSHAGMTSSRVKAIIPYFYLITPKNKGVFAQKDCLFHPGLMALWLVQALFWGSIEFSDTEAWYIFWEFQMYTDKMCYTGWKLVHQKASYIGQPLYHWAMSSKATSDVNVEGEFQNVDWECAMWMANCWNFSHNKGLPKHCLIKQTRFHCRVIAWSRRPGFTTDCTECPGTNLQFEQWQGLMNISFRFHKRYWSSKLAGIPFEVAPAGAMICAKPGWTMHDCPSGSPDMIQRVLRPPIMKNTMDYDDVCNKVLVMIIRCWAKACMSKAPIHHSQNFFNANAPGMGPRHCMYSQVGLHLWILDDGKDYVVVHCILARMNPNFWVRCWFTWGYPEHHYIAVNSMLASVIWGQSWWDWVENAECQLQGRQWKVSMRCMHHIGTCHDPLGPNNHNLQQQNWIFPFKMQYLWKLNPGGSMQSVCAPQWKTGNYPSACDDGTESKAVYNPCLTQDIWDEGDATPHEEINNLGLGEYKMYSNDWAPGFFKMNPLHFNRMISGHEAAKCSKWSMCFNGKPAARIWAFTCLPRLRWMPDDLNAAWWRNVYWTSLWYSDCDTCEMPHQCWMTKYSSHQQWYEWAGMAPSHKQEVGWASSDDRWKFNNEKWMGKHWGDSFFHSLNEFTWMFDKYVECQMDVPHNFISLHSMDTGGTHSSHDMFYHEYFNPRYQYQCGTVFQIGAMSIIDYTNHHDDLYFVEWNKTQFWFDFHHIWVQTPQNDSMKVADTCRGDAVNDMFCMCNPAFGAAEKHKGCNHHHWGKQLGWLYAMGEFQYRSNEREDFIHEGSKSAPQWEQDRKRSMLHAKQEMNQEWFCGKSNTPFQTAKDQPLAHHVEIRCMMNRIIMTVPWHCFVFNMNSGVFFENYKYWWLAIKQIKMEAGDRGCQAQECRGSLGYAKYHSQVEPEKEDLSSWRQAMCWPAVAVKDSCHVIFLFAFLHIMLSVVLCHCVPWYRKMWGSAFWANLYQPSSNALGHPTENCALFSVPPLPAIIWDISHINSRYHVMPTYEFSDIWIVEEGPNREKYRWQNWGEVIACFNFFPASNVFDAEIPRTVWWPSAVVHHHETYKFRKDGTMVDRATCLRFYWKVKIGGYNKCKQPQHLDHKSTHDFATFKLDNVSRKWPFKMYIKYHHSEVKRFKVCAENMDWYYKDLTTDNHNMQSNSENKMVSDKEWCKDYAIEEPAEQRKYFKLGPCIGRKFANISWVCYYPPPDMIKRFPYECIVRLTGVWLDSYFKFFTNIKN
DSMNRYGFVMIQSIHESNCCDFPASSMDQKHGEPWFQMKGNVKETPVENRKKLPPANQKANPAIDGIDNDGWTEENPSVTGCHAYLAGTITFCAQEQSVFCSWAIKVDWYHWHLMQNMMYWWPLEGWDHSGHVANHPFLRIPMLRTKIILGMCPQGQTPILQTKQDDACKREYNACEVLQNEQQDLCAPHDAVRSSCTPWESEFNYDFVYESNPSCLLRHTWGSVIVMMQDQYREWEPTNCMMEPMVPIPWSPPWTCWSWDWACWLRAEWIQMSVLRRLAPPLEYKPCEPEVNHMFQSVHICITCVMDRPLISRDVQSMCCLQHCPFSVSDQRLVIAEPQLWGVTIGFEMMGSRPTRQCKPHTPGQAATFITGPPARDAMDLKVVHCMAIFIENYNYKNNCYMVKIWKHRPLSNFLLSWGPETKLYDRQSENISQPEPYQQCPNWLLNWVIPFLQTYSMYLRPGLDTSNWTYLTNVLQFWAHENSNFGIEFSTDLMKLRHPFLNHMIACARSHSFDFWPMKPRIAIWAYTGASNKHSCGALPICDWCAITISHDPTQDYATCEPYDMMGHCALHVRMLEYREWFVESCVGLSDLAGDTKWIVRIVVVLCVCYFNQSYNQKIGIADMDTWLYTACQETQRCVSDMVARRMAEGRVELRSMLKAYPRQASERMNVPNGRRSGFREGNSCLHGAPEAGNFCPDEVPFWFQPYENCKDLAKSYNHTMVQNGHIVPYSYPMRFPFFPTICWAHPWDHQMLAQWPMSNFTFFKQWWLEEHQGMNRAGDRKHVSMTEDWKNPYWGNVYYWWRMCHMVDFEPVAYFQTYLCAKDAQFAFHMVFACDADTHKNHQVHTWPQFQCHSDDTGWNIRRVTFKGKRCNKKHTWRPFQQMAGCCPPEFLVTWIFADSDGQGFGDCQIPMEKGREFHPVFRRGEACVTLMAPINIPEDKDKQFQEENPDRRCARWPCMEKDLKMCIFCTEQNAWRKWHWGTGVLGCIETIMHPGQYQMQFEICQKAHHAHDGFLEVNRIPYNQNMNPWILYTHTWHVYRFKNVRGICHHARCFCLWFEVDATYNVVRFEIVMNQLNKYICNDRLCMRGWSQPKKWCGKGLLTASFSLDGFMESYFLNICMFNTPQLLSDLPYFFYRRTQEVRKGLWFFSTRQQYGAISVMTACGAQICETELGLDKWVDKLQQAIIDNSCVCRKHQGIYNGLSMPGHQGRSIPEGDFGNHREHQFNTKNFQPQCINGIKMLCRARPVRYNTVFEAFSNHMIFKLAADVTEPKSMVCLLRTGTEAFRCHKPMKRVHFKRTEAAKCDYFATMPQKHRPYISWKNFILINTQASERACSKKHSPWHNLEDAMLLEQIQLTDSIKLYADYGLFAPVIISKLWFAICCTNQFCTWKCNMEECIFCNVRHAHRGSHHQHKFRLIHLDPSPYLGLVFVTTTQMMKIMGAVDMHWQSNPMTPLPLAQYQTVFYACCCVQVPKASRVPAIIPYFYLITPKNKGVFAQKDCRTDRGDGIFIYLWLVQALECNWCNWISIEWSDTEFQMITDKKPYTGWKLVIASYIGQPLEHWAMSSKYGEFQNHDWNCWNFLHNKGLPCLIKQTRFTCRVIAWSRRPGFTVWTNLQLWGKLLEQWDMLGCCCNTNIMNISFRFHKRYWSSKAAGIPYEVSCPAGQSICAKPGWTMHDCPSYSPPMCPCIEHIMTEWQGCRVMKTDDQGVMIIRYVWDWAKACHSKAREDEGHDIEHHSQNFFPRPCMYSQVGLFLDGKDTLHSQSLNIVARMNPNFWVRCWRHWQEPNKNTWGYPEHHYIAVSVIWGQSWWGWVEYAAFFITCVAECQLQGRQWKVSGHCEPGQTHHIGTCHDRTGHTTILQQQDMTDWAKFKLNPIGSMQSVCAGKLQFNCCPCCPNNFIFCDYVNEDNDNAGTRHSVISHGTLVHMQVHMFSIIIVEWYHGYRGNATHSEMCREYACAMILKMNERDYMIFMQVVQITVIWAQTWEQWMNMQARDKKNHHWYIMASHISQWLTPDFDGPTEVCCMLNRFWGAFLSEAMCEQTVEYTGVSCGCQNLYESLLMHIRGDYQIHGRTKPKMWFFPKDHVEIQWCCYSWNMFGDDIVVHNIQRFEMEYANDVYHVVCLMRRPITPTSMLQTMPPSSKLCSPCKEMRNHMTSPAQWTMHQVMGIHIDRNWMWKCKIERPMLDRCKEKRQVHVWMEALNYNLQPPNCVGTTQVLHACWRELKSKTSPIAGRAAEYRQNQVNHWPWCAGVFKVAFDFFWLCPRHGLNNFHLDHIDSDMHFDPDQHHGSPCEQAAWPSNAWHMYPPNHPHVTIKQTAEIPGPWNRRKRGRNVMGTKCSGQSAHHCFFLRLQNGDYPTCHHLKAIYQTSVHANTGWKTMFKRAVQRNQGDNEELYTMKINGEKSENQDYNALDDFRCLQAAKFEAAYFFQRDDHIFSTYQRCPPASRVTSEETIYTLPHCVEVPDRWHYYYQSAEDCPVQEKLAYINNLTREEWYDKHFEDMMTTKCTSLLLFLIVMFPDQTTPRASTHSEPAGSWNFNSVTQHMQGPQVICYAVKNYSFESTKWAEQWTAARSMQHWEHGPHGVQMSDRARRYCVWPYFRKTLQTHDWWVDKEVHWRSYHKCQQLKRSMARAGTDEDGTHWDHHKLWTIKRAYVADHDELAAKRKHCEWSQEMFTMFKCCDGMAENHSGTPLEEQVENHQNRYLNYWRLLNGEAEWWRVWG
""".strip().split("\n")
# a, b = """
# AGCGTAG
# CTCGTC
# """.strip().split("\n")


score, a, b = alignment(a, b)
print(score)
print(a)
print(b)

